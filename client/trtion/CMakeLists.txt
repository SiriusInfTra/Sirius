cmake_minimum_required(VERSION 3.20)
project(colsys-client LANGUAGES CXX C CUDA)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_C_STANDARD 11)
find_package(CUDAToolkit 11 REQUIRED)
if(NOT DEFINED CMAKE_CUDA_ARCHITECTURES)
  set(CMAKE_CUDA_ARCHITECTURES 70)
endif()


include(FetchContent)

set(COLSYS_TRITON_VERSION "r23.12")

FetchContent_Declare(
  tritonclient
    GIT_REPOSITORY https://github.com/triton-inference-server/client.git
    GIT_TAG ${COLSYS_TRITON_VERSION}
)

FetchContent_MakeAvailable(tritonclient)

add_subdirectory(${tritonclient_SOURCE_DIR} ${tritonclient_BINARY_DIR}_2)


# set_target_properties(tritonclient PROPERTIES
#     CMAKE_INSTALL_PREFIX ${TRITON_INSTALL_DIR}
# )

set(TRITON_OPTIONS
    -DTRITON_ENABLE_CC_HTTP=OFF
    -DTRITON_ENABLE_CC_GRPC=ON
    -DTRITON_ENABLE_PERF_ANALYZER=OFF
    -DTRITON_ENABLE_PERF_ANALYZER_C_API=OFF
    -DTRITON_ENABLE_PERF_ANALYZER_TFS=OFF
    -DTRITON_ENABLE_PERF_ANALYZER_TS=OFF
    -DTRITON_ENABLE_GPU=ON
    -DTRITON_ENABLE_EXAMPLES=OFF
    -DTRITON_ENABLE_TESTS=OFF
    -DTRITON_KEEP_TYPEINFO=ON
    -DTRITON_COMMON_REPO_TAG=${COLSYS_TRITON_VERSION}
    -DTRITON_THIRD_PARTY_REPO_TAG=${COLSYS_TRITON_VERSION}
    -DTRITON_CORE_REPO_TAG=${COLSYS_TRITON_VERSION}
)

# # 应用配置选项
# foreach(option ${TRITON_OPTIONS})
#     set_property(TARGET tritonclient APPEND PROPERTY COMPILE_DEFINITIONS ${option})
# endforeach()